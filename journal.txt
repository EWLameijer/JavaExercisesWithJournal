@Future exercises
>20230603: try codewars/HumanReadable time again:)

@Lessons (general)
1) Please read code before running, to avoid silly errors like defense of consolas column number being wrong due to copy-pasting



20230602
13:59 The Dominion of Kings (Player's Guide) 14:02 // playersguide/dominionofkings
    3 minutes (including test). Measurement, checking + committing code; JLoc counts 13 lines, so about 4 lines/min ... 14:07
14:07 BREAK (drink and such) 14:10
14:10 The Defense of Consolas (Player's Guide) 14:15 // playersguide/defenseofconsolas
    5 minutes (including test) Though did spend about 10 minutes longer because there is a more elegant algorithm to avoid
    juggling with the +1/-1s .. so until 14:26, 24 code lines, so about 1 line/minute
14:27 SmallExercises: hexadecimalToOctal 14:31 = 4 minutes // smallexercises/hexadecimaltooctal
    check, commit, and count lines: committed, 10 lines, about 2.5 lines/minute
14:34 small break! Also got the idea to make a utility method for the "Please enter the number of widgets: " => int 36
14:36 Create a utility method to ask for a number - 14:42 // utils/AskFor
    I also made a method to ask for Strings and updated two of the other programs to test it. Looks nice!
    check, commit and count lines: done, 11 lines... about 1.5 line/minute
14:46 CodeWars: look for nice exercise. Let's try JavaScript!
14:48 Found one to try; 6th Kyu, not done yet, ranked on popularity
https://www.codewars.com/kata/514b92a657cdc65150000006/train/javascript
14:54 done! (after testing and such) // src\main\javascript\codewars\multiplesof3and5.js
   check, commit and count lines: 3 lines, so 0.5 lines/minute.
   I guess part of this is my relatively low familiarity with JavaScript, and that I had to look up how to make
   JavaScript ranges  [...Array(number)].map((_,i) => i) .. It WORKS, but I prefer Kotlin's
   fun multiplesOf3And5(number: Int) = (0..number).filter { it % 3 == 0 || it % 5 == 0 }.sum()
   over
   function solution(number) {
     return number > 0 ? [...Array(number)].map((_,i) => i).filter(i => i % 3 == 0 || i % 5 == 0).reduce((a, b) => a + b) : 0;
   }
   for some odd reason. No matter, I got a bit of JavaScript practice (and updated my file structure to host JS files too!).
   Now get JAVA practice with CodeWars
15:00 short break! 02
15:02 Now Java with Codewars. Perhaps a bit more challenging than 6tyh Kyu 15:10. Tested.
    Wrote 5 lines of code. No great productivity, (like 0.6 lines/minute) but I had to look up how to zero-pad Strings
    in Java, so overall not bad,.
    I looked at the solutions, and while some seemed less easy to maintain, one stood out as a great idea: using Duration!
    I'll make a version of that! Or at least, best to do it tomorrow to see if I remember...
15:16 Let's try Kattis (another free exercise site). Lots of problems and lots of browsing to find one that is neither too easy
   nor requiring higher maths (don't want to take time for that today). Wound up with https://open.kattis.com/problems/gandalfsspell
   ... 15:33 Taking a break; I should probably read Kattis' instructions -> 16:03 RESUME .. 16:20
   Check, Commit & Count:
   I don't like the "True" and "False" literals, which are rather more cumbersome in Java or basically any production programming
   language except for Python, so I adjust it a little. Code still works.
   32 lines of code, 17+17 minutes, say about 0.5 line/minute, though likely I was a bit handicapped by me needing to
   get familiar with how Kattis works.
16:34 And Exercism (another free site, with worked-out examples)
    16:36 https://exercism.org/tracks/java/concepts/chars ... 17:03
    Good grief! I can see why many participants are not that enthusiastic about Exercism. You need a whole bag of tricks
    like regex replacements, stack overflow skills, Character methods, StringBuilder... and then discounting that
    the assignment has internal contradictions ("you must remove non-letters" - "oh, well, I meant non-letters except
    for the underscore, which was the space". And that mess ONLY to learn people to work with chars? Which should be
    nice for BEGINNERS
    Check, Commit & Count: Checked, committed, 36 lines of code in about 33 min; so bit more than 1 line/min
    Looked at the other solutions. Some really weird (and smart) usually hard-to-understand solutions; really not
    enterprise-ready code, but then I guess this is far from a standard enterprise problem.
17:18 To close off, let's do an exercise that I have thought of myself!
    18:10 There is at least one bug in the code. 5 minutes, then break! 18:12 DINNER
    18:36 Try the Pseudocode Programming Process? 18:50. Well, took some time to analyze, but it now works!
    Check, Commit & Count 48 lines; 52+14=66 min is about 0.7 lines per minute, which is okay. Definitely, given the
    need for pseudocode, this is still somewhat in my own growth zone! 19:05

DAY-summary: In total about 212 minutes programming. This is less than the 240 minutes minimum I'd ask of people who
are learning Java, but then, I also have other tasks (like preparing worked examples). May this example help other
people who try to improve their programming!



